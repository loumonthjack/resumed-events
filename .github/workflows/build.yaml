
name: Build API

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/loumonthjack/resumed-events

jobs:
  deploy:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
    
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
    
        - name: Build, tag, and push image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: resumed-events
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  
        - name: Set up Amazon ECS action
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: ./ecs-task-def.json
            container-name: resumed-events-service
            image: ${{ steps.login-ecr.outputs.registry }}/resumed-events:${{ github.sha }}
            environment-variables: |
              NODE_ENV=${{ secrets.NODE_ENV }}
              PORT=${{ secrets.PORT }}
              DATABASE_URL=${{ secrets.DATABASE_URL }}
              JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
              SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
              SENDGRID_FROM_EMAIL=${{ secrets.SENDGRID_FROM_EMAIL }}
              STRIPE_SECRET_KEY_TEST=${{ secrets.STRIPE_SECRET_KEY_TEST }}
              STRIPE_WEBHOOK_KEY_TEST=${{ secrets.STRIPE_WEBHOOK_KEY_TEST }}
              AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
              AWS_REGION=${{ secrets.AWS_REGION }}
              AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
              DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}

        - name: Deploy to Amazon ECS service
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ./ecs-task-def.json
            service: resumed-events-service
            cluster: resumed-events
      